#!/usr/bin/env bash
# description: Checks if either TX or RX flow control is enabled on a NIC

[ -z ${UTILSFILE} ] && source $(echo "$(dirname ${0})/../utils")
if oc auth can-i debug node >/dev/null 2>&1; then
  msg "Checking TX/RX flow control settings nodes (${BLUE}using oc debug, it can take a while${NOCOLOR})"
  fw_errors=0
  # shellcheck disable=SC2016
  for node in $(oc get nodes -o go-template='{{range .items}}{{$node := .}}{{range .status.conditions}}{{if eq .type "Ready"}}{{if eq .status "True"}}node/{{$node.metadata.name}}{{"\n"}}{{end}}{{end}}{{end}}{{end}}'); do
    # shellcheck disable=SC1083
    ocdebugorwait # Pause for no OC debug running
    if ! FLOWCONTROL=$(oc debug --image="${OCDEBUGIMAGE}" "${node}" -- chroot /host sh -c "for device in \$(lspci -D | grep Ethernet | awk '{ print \$1 }'); do echo -e \$(ls /sys/bus/pci/devices/\${device}/net/) \$(ethtool -a \$(ls /sys/bus/pci/devices/\${device}/net/)| egrep 'RX|TX'); done | grep ': on' | tr ' ' ','" 2>/dev/null); then
      msg "${ORANGE}Error running oc debug in ${node}${NOCOLOR}"
    else
      if [ -n "${FLOWCONTROL}" ]; then
        #echo ${FLOWCONTROL}
        for result in ${FLOWCONTROL}; do
          dev=$(echo ${result} | awk -F, '{print $1}')
          msg "${RED}${dev}${NOCOLOR} on ${BLUE}$(echo ${node} | awk -F/ '{print $2}')${NOCOLOR} has incorrect flow control settings: ($(echo ${result} | awk -F, '{$1=""; print}') )"
          errors=$(("${errors}" + 1))
          if [ ! -z "${ERRORFILE}" ]; then
            echo $errors >${ERRORFILE}
          fi
        done
      else
        msg "Couldn't query NICs on ${node}"
      fi
    fi
  done
  if [[ $fw_errors -gt 0 ]]; then
    exit ${OCERROR}
  fi
  exit ${OCINFO}
else
  msg "Couldn't debug nodes, check permissions"
  exit ${OCSKIP}
fi
exit ${OCUNKNOWN}
